name: Build and Release [Tag]
on:
  push:
    tags:
      - "*.*.*"

env:
  RELEASE_NAME: PIMSV2
  RELEASE_FILE: pimsv2
  BUILD_TYPE: PRD
jobs:
  build-test:
    name: Build x Test [Branch ${GITHUB_REF##*/}]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Fix timestamps
      - name: Restore timestamps for source code
        uses: chetan/git-restore-mtime-action@v1

#      - name: List files
#        run: ls -la .
#
#      - name: echo .js files
#        run: cat storage/test.js

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          exclusions: '*.git* /*node_modules/* .editorconfig /*storage/*'

      - name: Upload site content
        uses: actions/upload-artifact@v2
        with:
          name: site-build
          path: release.zip
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Download site content
        uses: actions/download-artifact@v2
        with:
          name: site-build

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Get current datetime
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Get release tag
        id: tag
        run: echo "::set-output name=tag::${GITHUB_REF##*/}"

      - name: Check release version input
        id: prerelease
        run: |
          if ! [[ ${{steps.tag.output.tag}} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo ::set-output name=prerelease::true
          fi

      - name: add add version to release
        env:
          VERSION_INFO: version-info.ini
        run: |
          echo "[Build]" > ${{env.VERSION_INFO}}
          echo "release_version = ${{steps.tag.output.tag}}" >> ${{env.VERSION_INFO}}
          if ! [[ ${{steps.tag.output.tag}} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "release_type = pre-release" >> ${{env.VERSION_INFO}}
          fi
          echo "build_version = ${{github.event.inputs.RELEASE_VERSION}}+${GITHUB_SHA::8}" >> ${{env.VERSION_INFO}}
          echo "build_date = ${{steps.datetime.outputs.datetime}}" >> ${{env.VERSION_INFO}}
          echo "build_id = ${GITHUB_SHA})" >> ${{env.VERSION_INFO}}
          zip ./release.zip ${{env.VERSION_INFO}}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{steps.tag.output.tag}}
          prerelease: ${{steps.prerelease.outputs.prerelease}}
          files: |
            release.zip
            version-info

#github:
#  event:
#    inputs:#      - name: Create GitHub release
#        id: create-new-release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          release_name: ${{env.BUILD_TYPE}} ${{steps.date.outputs.date}}_${{github.run_number}}
#          tag_name: ${{env.BUILD_TYPE}}_${{steps.date.outputs.date}}_${{github.run_number}}
#          draft: true
#          prerelease: true
#      - name: Upload asset to GitHub release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create-new-release.outputs.upload_url}}
#          asset_path: ./release.zip
#          asset_name: ${{env.RELEASE_FILE}}.zip
#          asset_content_type: application/zip