name: Build and Release [Official]
on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: 'Release Version'
        default: 0
        required: true
env:
  RELEASE_NAME: PIMSV2
  RELEASE_FILE: pimsv2
  BUILD_TYPE: PRD
jobs:
  build-test:
    name: Build x Test [Branch ${GITHUB_REF##*/}]
    runs-on: ubuntu-latest
    steps:
      - name: check tag by push
        if: ${{startsWith(github.ref, 'refs/tags/')}}
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> GITHUB_ENV

      - name: check tag by input
        if: ${{!startsWith(github.ref, 'refs/tags/')}}
        run: echo "TAG_NAME=${{github.event.inputs.RELEASE_VERSION}}" >> GITHUB_ENV

      - name: echo tag
        run: echo "TAG_NAME=${{env.TAG_NAME}}"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.TAG_NAME }}

      # Fix timestamps
      - name: Restore timestamps for source code
        uses: chetan/git-restore-mtime-action@v1

#      - name: List files
#        run: ls -la .
#
#      - name: echo .js files
#        run: cat storage/test.js

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          exclusions: '*.git* /*node_modules/* .editorconfig /*storage/*'

      - name: Upload site content
        uses: actions/upload-artifact@v2
        with:
          name: site-build
          path: release.zip
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Download site content
        uses: actions/download-artifact@v2
        with:
          name: site-build

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: add add version to release
        run: |
          echo "${{env.RELEASE_NAME}} version: ${{github.event.inputs.RELEASE_VERSION}}" > version-info
          echo "build: ${{ steps.date.outputs.date }}.${{ github.run_number }}" >> version-info
          echo "sha: ${{ github.sha }}" >> version-info
          echo "ref: ${{ github.ref }}" >> version-info

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          #draft: true
          #prerelease: true
          name: ${{github.event.inputs.RELEASE_VERSION}}
          tag_name: 0.0.9
          files: |
            release.zip
            version-info

#github:
#  event:
#    inputs:#      - name: Create GitHub release
#        id: create-new-release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          release_name: ${{env.BUILD_TYPE}} ${{steps.date.outputs.date}}_${{github.run_number}}
#          tag_name: ${{env.BUILD_TYPE}}_${{steps.date.outputs.date}}_${{github.run_number}}
#          draft: true
#          prerelease: true
#      - name: Upload asset to GitHub release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create-new-release.outputs.upload_url}}
#          asset_path: ./release.zip
#          asset_name: ${{env.RELEASE_FILE}}.zip
#          asset_content_type: application/zip