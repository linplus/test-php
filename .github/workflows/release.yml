name: Build and Release [Official]
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: 'Release Version'
        required: true
env:
  RELEASE_NAME: PIMSV2
  RELEASE_FILE: pimsv2
  BUILD_TYPE: PRD
jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      branch: ${{steps.get-branch.outputs.branch}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          exclusions: '*.git* /*node_modules/* .editorconfig /*storage/*'

      - name: Upload site content
        uses: actions/upload-artifact@v2
        with:
          name: site-build
          path: release.zip
          retention-days: 1

      - name: Get current branch
        id: get-branch
        run: echo "::set-output branch=${GITHUB_REF##*/}"

  release:
    name: Release ${{github.event.inputs.RELEASE_VERSION}} [Branch ${{ needs.build-test.outputs.branch }}]
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Download site content
        uses: actions/download-artifact@v2
        with:
          name: site-build

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: add add version to release
        run: |
          echo "${{env.RELEASE_NAME}} version: ${{github.event.inputs.RELEASE_VERSION}}" > version-info
          echo "build: ${{ steps.date.outputs.date }}.${{ github.run_number }}" >> version-info
          zip ./release.zip version-info

      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{env.BUILD_TYPE}} ${{github.event.inputs.RELEASE_VERSION}}_${{ github.run_number }}
          tag_name: ${{env.BUILD_TYPE}}_${{github.event.inputs.RELEASE_VERSION}}_${{ github.run_number }}

      - name: Upload asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url}}
          asset_path: ./release.zip
          asset_name: ${{env.RELEASE_FILE}}_${{github.event.inputs.RELEASE_VERSION}}.zip
          asset_content_type: application/zip